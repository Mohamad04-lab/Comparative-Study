import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

# Define object detection models
models = ["RCNN", "Fast RCNN", "Faster RCNN", "SSD", "YOLOv7", "DETR"]

# Define model performance metrics (Example values: Replace with actual benchmark results)
accuracy = [0.73, 0.78, 0.85, 0.82, 0.88, 0.86]  # Mean Average Precision (mAP)
inference_time = [2.5, 1.2, 0.4, 0.06, 0.004, 0.02]  # Seconds per image
fps = [0.4, 0.8, 2.5, 16, 250, 50]  # Frames per second

# Create DataFrame
comparison_df = pd.DataFrame({
    "Model": models,
    "mAP (Accuracy)": accuracy,
    "Inference Time (s)": inference_time,
    "FPS": fps
})

# Sort by accuracy
comparison_df = comparison_df.sort_values(by="mAP (Accuracy)", ascending=False)
print(comparison_df)

# Visualization
fig, ax1 = plt.subplots(figsize=(10, 6))

ax1.bar(models, accuracy, color='b', alpha=0.6, label='mAP (Accuracy)')
ax1.set_ylabel('mAP (Accuracy)', color='b')
ax1.set_ylim(0.7, 0.9)
ax1.set_xticklabels(models, rotation=20)

ax2 = ax1.twinx()
ax2.plot(models, inference_time, color='r', marker='o', label='Inference Time (s)')
ax2.set_ylabel('Inference Time (s)', color='r')
ax2.set_yscale('log')

fig.suptitle("Comparative Study of Object Detection Models")
fig.tight_layout()
plt.show()
